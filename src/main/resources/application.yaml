# Spring framework configuration
server:
  port: 8080

spring:
  application:
    name: wallet
  profiles:
    default: dev
  data:
    jdbc:
      dialect: mysql
    web:
      pageable:
        serialization-mode: via-dto
    redis:
      host: localhost
      port: 6379
#      password: pass
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.format_sql: true
      envers:
        audit_table_suffix: _history
  messages:
    encoding: UTF-8
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 100MB
  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: 'false'
            required: 'false'
          auth: 'false'
    host: localhost
    port: 1025
    username: project@mail.com
    password: password
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      compression-type: snappy
# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
  tracing:
    sampling:
      probability: '1.0'
  server:
    port: 8081

# Logging configuration
logging:
  level:
    root: info

resilience4j.ratelimiter:
  instances:
    loginRateLimiter:
      limitForPeriod: 5
      limitRefreshPeriod: 1m
      timeoutDuration: 30s
      writableStackTraceEnabled: false
    registerRateLimiter:
      limitForPeriod: 5
      limitRefreshPeriod: 1m
      timeoutDuration: 30s
      writableStackTraceEnabled: false

# Application-specific configuration
app-specific-configs:
  cache:
    short:
      ttl: '60'
    medium:
      ttl: '120'
    default:
      max-size: '1000'
  security:
    jwt:
      secret-key: ${APP_JWT_SECRET_KEY}
      refresh-token-validity-in-minutes: 90
      token-validity-in-minutes: 60
    encryption:
      secret: ${APP_ENC_SECRET}
  api:
    auth:
      username: ${API_USERNAME:defaultUsername}
      password: ${API_PASSWORD:defaultPassword}
      token: ${API_TOKEN:defaultToken}
  constants:
    api-url: url
    api-key: key
    default-auditor: SYSTEM
  storage:
    directory: ./storage
    allowed-extensions: jpg,jpeg,png,pdf,doc,docx